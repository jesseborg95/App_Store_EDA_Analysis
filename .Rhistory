theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 9, color = 'black')) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# Create dataframe and store Price Category and User Rating columns and perform anova
priceCatRating <- subset(paidApps, select = c("PriceCategory", "Rating"))
anovaRatingPrice <- aov(Rating ~ PriceCategory,  data=priceCatRating)
summary(anovaRatingPrice)
anovaRatPrice <- summary(anovaRatingPrice)
anovaRatPrice[[1]][[5]][[1]]
# Create a boxplot of user rating by different price categories
ggplot(priceCatRating, aes(x = PriceCategory, y = Rating)) +
geom_boxplot(fill=viridis(3)) +
ggtitle("Boxplot of User Rating by Price Category")+
ylab("User Rating") +
xlab("Price Category") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5, size = 10, color = 'black'))
# clean installs column and cast to numeric
paidApps$Installs <- str_remove(paidApps$Installs, '\\+')
paidApps$Installs <- as.numeric(gsub(',','',paidApps$Installs))
# Create dataframe and store Price Category and Installs columns and perform anova
priceCatInstalls <- subset(paidApps, select = c("PriceCategory", "Installs"))
anovaInstallsPrice <- aov(Installs ~ PriceCategory,  data=priceCatInstalls)
summary(anovaInstallsPrice)
anovaInstPrice <- summary(anovaInstallsPrice)
anovaInstPrice[[1]][[5]][[1]]
# Create a boxplot of apps installed by different price categories
ggplot(priceCatInstalls, aes(x = PriceCategory, y = Installs)) +
geom_boxplot(fill=viridis(3)) +
ggtitle("Boxplot of Apps Installed by Price Category")+
ylab("Apps Installed") +
xlab("Price Category") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5, size = 10, color = 'black'))
lcpaidApps <- subset(paidApps, select = c("Rating", "Installs", "Price"))
str(lcpaidApps)
# Get correlation matrix for all numerical variables
paidAppsCor = cor(lcpaidApps)
corrplot(paidAppsCor, method = 'number')
# fit the price to the rating
lm1 = lm(Rating ~ Price, data = lcpaidApps)
summary(lm1)
# fit the number of app installs to the rating
lm2 = lm(Rating ~ Installs, data = lcpaidApps)
summary(lm2)
# fit the price and number of app installs to the rating
lm3 = lm(Rating ~ Price+Installs, data = lcpaidApps)
summary(lm3)
vif(lm3)
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 8, color = 'black'))
googlePlay <- googlePlay %>%
mutate(
InstallsNum = gsub("\\+", "", as.character(Installs)),
InstallsNum = as.numeric(gsub(",", "", InstallsNum)),
Rating = as.numeric(Rating),
Reviews = as.numeric(Reviews)
)%>%
filter(
Type %in% c("Free", "Paid")
)
extract = c("Rating","Reviews","InstallsNum")
googlePlay.extract = googlePlay[extract]
googlePlay.extract %>%
filter(is.nan(googlePlay.extract$Reviews)) %>%
filter(is.na(googlePlay.extract$InstallsNum)) %>%
filter(is.na(googlePlay.extract$Rating))
googlePlay.extract = na.omit(googlePlay.extract)
cor_matrix = cor(googlePlay.extract)
corrplot(cor_matrix,method = "color",order = "AOE",addCoef.col = "grey")
# mtcarscor = cor(mtcars) # get the CORRELATION MATRIX between all numerical variables.
# mtcarscor
ratingHist <- ggplot(googlePlay, aes(x = Rating)) +
geom_histogram(aes(y=..density..), colour="black", fill="white", binwidth = .2)+
geom_density(alpha=.2, fill="#FF6666")
ratingHist
googlePlay <- googlePlay %>%
mutate(InstallsLog = Installs)
googlePlay$InstallsLog <- gsub("5","1", googlePlay$InstallsLog)
googlePlay$InstallsLog <- factor(googlePlay$InstallsLog, order = TRUE,
levels = c("0", "0+", "1+", "10+", "100+", "1,000+", "10,000+", "100,000+", "1,000,000+", "10,000,000+", "100,000,000+", "1,000,000,000+"))
googlePlay %>%
group_by(InstallsLog) %>%
summarise(count = n()) %>%
suppressWarnings()
installsHist <- ggplot(subset(googlePlay, !is.na(InstallsLog)), aes(x = InstallsLog)) +
geom_bar(aes(y= ..count..), colour="black", fill="#AFEEEE", na.rm = TRUE)+
geom_density(alpha=.2, fill="#AFEEEE") +
theme(axis.text.x = element_text(angle = 50, hjust = 1))
suppressWarnings(installsHist)
standardize <- googlePlay %>%
mutate(Installs = scale(InstallsNum)) %>%
mutate(Rating = scale(Rating))
head(standardize)
View(googlePlay)
duplicated(googlePlay$App)
anyDuplicated(googlePlay$App)
#hist(googleCommon$Rating, main = 'Histogram of frequency rating for the Google Playstore', xlab = 'Rating', col = viridis(20),
#xlim=c(0,5))
#hist(appleCommon$Rating, main = 'Histogram of frequency rating for the Apple Store', xlab = 'Rating', col = viridis(12),
#xlim=c(0,5))
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(x='Store: 0=Apple, 1=Google', y='Price $ USD') +
ggtitle("Total Cost of Common Apps") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5)) +
scale_y_discrete("0" = "App Store", "1" = "Google Play Store")
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(x='Store: 0=Apple, 1=Google', y='Price $ USD') +
ggtitle("Total Cost of Common Apps") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5)) +
scale_y_discrete(labels=c("0" = "App Store", "1" = "Google Play Store"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(x='Store: 0=Apple, 1=Google', y='Price $ USD') +
ggtitle("Total Cost of Common Apps") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Common Apps") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.x = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_colour_viridis_d()
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_colour_viridis_d(StoreType)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill=StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_manual(values=c("0"="black", "1"="blue"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_manual(values=c("0"="blue", "1"="black"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_manual("legend", values=c("0"="blue", "1"="black"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
color_vec <- c("a", "b")
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill = StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_manual("legend", values=c("0"="blue", "1"="black"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
color_vec <- c("a", "b")
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill = StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_manual("legend", values=c("0"="red", "1"="black"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
rm(color_vec)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill = StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fille_viridis()
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill = StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_viridis()
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill = StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_color_viridis()
#scale_fill_manual("legend", values=c("0"="red", "1"="black"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill = StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_manual("legend", values=c("0"="red", "1"="black"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill = StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_manual("legend", values=c("0"="aquamarine4", "1"="aquamarine"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
ggplot(price_compare_DF, aes(x=StoreType, y=Price, fill = StoreType)) +
geom_col() +
coord_flip() +
labs(y='Price $ USD') +
ggtitle("Total Cost of Apps for Apps Found in Both Stores") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5), axis.title.y = element_blank()) +
scale_x_discrete(labels=c("0" = "App Store", "1" = "Google Play Store")) +
scale_fill_manual("legend", values=c("0"="aquamarine4", "1"="aquamarine3"))
#Uncomment to check apple price sum
#apple_sub <- price_compare_DF[price_compare_DF$StoreType==0, ]
#sum(apple_sub$Price)
#Uncomment to check Google price sum
#google_sub <- price_compare_DF[price_compare_DF$StoreType==1, ]
#sum(google_sub$Price)
View(appleStore)
?mutate
apple_pie_DF <- appleStore[ ,"App"]
apple_pie_DF <- appleStore[ ,"App", "Price", appleStore$Free_or_Paid]
apple_pie_DF <- appleStore["App", "Price"]
apple_pie_DF <- appleStore["App", "Price"]
apple_pie_DF <- appleStore[ ,"App", "Price"]
rm(apple_pie_DF)
apple_pie_DF <- appleStore[ ,"App", "Price"]
apple_pie_DF <- appleStore["App", "Price"]
apple_pie_DF <- appleStore[appleStore$App, appleStore$Price]
apple_pie_DF <- appleStore[appleStore$App]
apple_pie_DF <- appleStore[ , appleStore$App]
apple_pie_DF <- select(appleStore, c(App, Price))
View(apple_pie_DF)
apple_pie_DF <- select(appleStore, c(App, Price)) %>% apple_pie_DF$Free_Paid <- as.factor(rep(0, nrow(apple_pie_DF)))
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(rep(0, nrow(apple_pie_DF)))
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(rep(0, nrow(apple_pie_DF$Price == 0)))
typeof(apple_pie_DF$Price)
nrow(apple_pie_DF$Price == 0)
nrow(apple_pie_DF$Price = 0)
nrow(apple_pie_DF$Price > 0)
length(apple_pie_DF$Price)
length(apple_pie_DF$Price == 0)
length(apple_pie_DF[apple_pie_DF$Price == 0])
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(rep(0, length(apple_pie_DF$Price == 0)))
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(rep(0, length(apple_pie_DF[apple_pie_DF$Price == 0])))
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(rep(0, length(apple_pie_DF[apple_pie_DF$Price == 0, ])))
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(rep(0, length(apple_pie_DF[apple_pie_DF$Price == 0, ])))
?rep()
transform.data.frame()
?transform
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- with(apple_pie_DF, ifelse(Price==0))
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- with(apple_pie_DF, ifelse(Price==0, 0, 1))
?with
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- with(apple_pie_DF, ifelse(Price==0, 0, 1))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- with(apple_pie_DF, ifelse(Price==0, 0, 1))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
View(google_pie_DF)
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- with(apple_pie_DF, ifelse(Price==0, 0, 1))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#apple store pie
ggplot(apple_pie_DF, aes(x="", y=Free_Paid, fill=group))+
geom_bar(width = 1, stat = "identity")
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- with(apple_pie_DF, ifelse(Price==0, 0, 1))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#apple store pie
ggplot(apple_pie_DF, aes(x="", y=Free_Paid, fill=Free_Paid))+
geom_bar(width = 1, stat = "identity")
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(with(apple_pie_DF, ifelse(Price==0, 0, 1)))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#apple store pie
ggplot(apple_pie_DF, aes(x="", y=Free_Paid, fill=Free_Paid))+
geom_bar(width = 1, stat = "identity")
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(with(apple_pie_DF, ifelse(Price==0, 0, 1)))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#apple store pie
ggplot(apple_pie_DF, aes(x="", y=Free_Paid, fill=Free_Paid))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- with(apple_pie_DF, ifelse(Price==0, 0, 1))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#apple store pie
ggplot(apple_pie_DF, aes(x="", y=Free_Paid, fill=Free_Paid))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(with(apple_pie_DF, ifelse(Price==0, 0, 1)))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#apple store pie
ggplot(apple_pie_DF, aes(x="", y=Free_Paid, fill=Free_Paid))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
count(apple_pie_DF$Free_Paid == 0)
count(apple_pie_DF[apple_pie_DF$Free_Paid == 0,])
count(apple_pie_DF[apple_pie_DF$Free_Paid == 1,])
4056/7197
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(with(apple_pie_DF, ifelse(Price==0, 0, 1)))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#apple store pie
ggplot(apple_pie_DF, aes(x="", y=Free_Paid, fill=Free_Paid))+
geom_bar(width = 1, stat = "identity") +
coord_polar()
#Get apple store data ready
apple_pie_DF <- select(appleStore, c(App, Price))
apple_pie_DF$Free_Paid <- as.factor(with(apple_pie_DF, ifelse(Price==0, 0, 1)))
#Get Google store data ready
google_pie_DF <- select(googlePlay, c(App, Price))
google_pie_DF$Free_Paid <- with(google_pie_DF, ifelse(Price==0, 0, 1))
#apple store pie
ggplot(apple_pie_DF, aes(x="", y=Free_Paid, fill=Free_Paid))+
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
library("stringr")
# setwd("/Users/jonathangiguere/Desktop/DATS 6101/Projects/Project 1/Data-Science-Project-Final-master")
googlePlay <- read.csv('googleplaystore.csv')
googlePlay <- subset(googlePlay, select = -c(Android.Ver, Genres) )
googlePlay$Size <- str_remove(googlePlay$Size, 'M')
str(googlePlay)
